index,diff,message
325," diff --git a/DefaultKeyGeneratorTest_old.java b/DefaultKeyGeneratorTest_new.java
index f746e3a..6d1c452 100644
--- a/DefaultKeyGeneratorTest_old.java
+++ b/DefaultKeyGeneratorTest_new.java
@@ -72,7 +72,7 @@ public final class DefaultKeyGeneratorTest {
     
     @Test
     @SneakyThrows
-    public void assertGenerateKey1() {
+    public void assertGenerateKeyWithClockCallBack() {
         List<Number> expected = Arrays.<Number>asList(4194305L, 8388608L, 8388609L, 12582913L, 12582914L, 16777216L, 16777217L, 20971521L, 20971522L, 25165824L);
         DefaultKeyGenerator keyGenerator = new DefaultKeyGenerator();
         TimeService timeService = new FixedTimeService(1);
",rename to assertGenerateKeyWithClockCallBack()
665," diff --git a/ApolloConfigDemo_old.java b/ApolloConfigDemo_new.java
index d5050e2..6a71212 100644
--- a/ApolloConfigDemo_old.java
+++ b/ApolloConfigDemo_new.java
@@ -14,20 +14,19 @@ import java.io.InputStreamReader;
 /**
  * @author Jason Song(song_s@ctrip.com)
  */
-public class ApolloConfigDemo implements ConfigChangeListener {
+public class ApolloConfigDemo {
   private static final Logger logger = LoggerFactory.getLogger(ApolloConfigDemo.class);
   private Config config;
 
   public ApolloConfigDemo() {
     config = ConfigService.getAppConfig();
-    config.addChangeListener(this);
     config.addChangeListener(new ConfigChangeListener() {
       @Override
       public void onChange(ConfigChangeEvent changeEvent) {
-        logger.info(""Changes2 for namespace {}"", changeEvent.getNamespace());
+        logger.info(""Changes for namespace {}"", changeEvent.getNamespace());
         for (String key : changeEvent.changedKeys()) {
           ConfigChange change = changeEvent.getChange(key);
-          logger.info(""Change2 - key: {}, oldValue: {}, newValue: {}, changeType: {}"",
+          logger.info(""Change - key: {}, oldValue: {}, newValue: {}, changeType: {}"",
               change.getPropertyName(), change.getOldValue(), change.getNewValue(),
               change.getChangeType());
         }
@@ -58,15 +57,4 @@ public class ApolloConfigDemo implements ConfigChangeListener {
       apolloConfigDemo.getConfig(input);
     }
   }
-
-  @Override
-  public void onChange(ConfigChangeEvent changeEvent) {
-    logger.info(""Changes for namespace {}"", changeEvent.getNamespace());
-    for (String key : changeEvent.changedKeys()) {
-      ConfigChange change = changeEvent.getChange(key);
-      logger.info(""Change - key: {}, oldValue: {}, newValue: {}, changeType: {}"",
-          change.getPropertyName(), change.getOldValue(), change.getNewValue(),
-          change.getChangeType());
-    }
-  }
 }
",refactor demo
1265," diff --git a/CustomEvent_old.java b/CustomEvent_new.java
index 2d5c338..8534d7d 100644
--- a/CustomEvent_old.java
+++ b/CustomEvent_new.java
@@ -3,11 +3,11 @@ package org.baeldung.guava;
 public class CustomEvent {
     private String action;
 
-    public CustomEvent(String action) {
+    CustomEvent(String action) {
         this.action = action;
     }
 
-    public String getAction() {
+    String getAction() {
         return action;
     }
 
diff --git a/EventListener_old.java b/EventListener_new.java
index 438fcad..60beebe 100644
--- a/EventListener_old.java
+++ b/EventListener_new.java
@@ -28,11 +28,11 @@ public class EventListener {
         eventsHandled++;
     }
 
-    public int getEventsHandled() {
+    int getEventsHandled() {
         return eventsHandled;
     }
 
-    public void resetEventsHandled() {
+    void resetEventsHandled() {
         eventsHandled = 0;
     }
 }
diff --git a/RateLimiterLongRunningUnitTest_old.java b/RateLimiterLongRunningUnitTest_new.java
index eb848e5..22041e7 100644
--- a/RateLimiterLongRunningUnitTest_old.java
+++ b/RateLimiterLongRunningUnitTest_new.java
@@ -10,7 +10,7 @@ import java.util.stream.IntStream;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
-public class RateLimiterUnitTest {
+public class RateLimiterLongRunningUnitTest {
 
     @Test
     public void givenLimitedResource_whenUseRateLimiter_thenShouldLimitPermits() {
",RateLimiter fix (#2229)
